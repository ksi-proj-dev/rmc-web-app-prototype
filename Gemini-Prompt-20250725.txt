===============================================================
2025/07/25(金)07:41
===============================================================
# Webアプリプログラム開発支援をお願いします。

- 以下のアプリのスタック構成案、画面構成案、UI案、を見せてください。
- まずはプロトタイピングを行いたいと思います。
- VPS上でPython Streamlitが良いのでないかと考えていますが、他の案があれば提案してください。

## アプリ概要

- Webアプリとして実装
- VPSサーバ上のNgInxのリバースプロキシ経由でPython Streamlitを実行
- PDFファイル（A4、80ページ程度）を入力
- PDFページ毎に種類を判定
  - 判定にはAI OCR(Azure AI Document Intelligence や DX Suite)で簡易判定
  - 簡易判定では、各ページを水平方向に5分割し、含まれる文字列でページの種類を判断
  - 判断基準は別途取り決める必要がある
- 配合計画書ページが見つかれば、ページ全体をAI OCRし、JSON出力
- 出力JSONをLLMに渡し、解析し、指定項目をCSV出力
  - 指定項目はシステムプロンプトに指定
- 全配合計画書ページのCSVをExcelにまとめ、ダウンロード

## 検討項目

- 処理時間が長くなりそうなので、以下をリアルタイムで画面表示可能か？
  - ページ判定状況
  - AI OCR状況
  - LLM状況
---------------------------------------------------------------




### PDFファイル読み取りとプレビュー

- 80ページ程度のPDFファイルを入力
- 入力UIはドラッグアンドドロップとファイル選択
- 


### PDFページ判定(簡易解析)

### 配合計画書ページ詳細解析

### 配合計画書ページをExcel出力



- PDFファイルを読み取り、ページ種類をAI OCRで自動判定
- 判定結果を元に配合計画書ページを抽出しAI OCR実行
- 配合計画書ページのOCR結果のJSONをLLMで解析・補正しCSV出力
- 配合計画書ページ毎の全CSV出力をExcelにまとめ、ダウンロード

## 処理フロー

### PDFページ仕分け

- 全PDFページについて、ページの種類を自動判定
- ページ判定にはAI OCR(Azure AI Document Intelligence や DX Suite)を使用
- ページ判定用にPDFの各ページを水平方向に5分割し、先頭パーツのみでページ判定（判定基準は別途記載）

### 配合計画書ページを詳細に解析

- 判定結果が「配合計画書」の非分割ページをAI OCRで詳細データを抽出しJSON出力
- OCR出力のJSONをLLMに渡し解析、データ補正を行い、指定項目をCSV出力（指定項目は別途記載）

---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
---------------------------------------------------------------
